{
    "swagger": "2.0",
    "info": {
        "description": "API for managing people with data enrichment",
        "title": "Effective Mobile API",
        "contact": {
            "name": "API Support",
            "email": "support@effective-mobile.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/people": {
            "get": {
                "description": "Get list of people with optional filtering",
                "produces": [
                    "application/json"
                ],
                "summary": "Get people",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by age",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by gender",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by nationality",
                        "name": "nationality",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Person"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create person with enriched data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new person",
                "parameters": [
                    {
                        "description": "Person data",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Person"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Person": {
            "type": "object",
            "required": [
                "name",
                "surname"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                },
                "nationality": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string",
                    "maxLength": 50
                },
                "surname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2
                }
            }
        }
    }
}